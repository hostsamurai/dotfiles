[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

[[plugins]]
repo = 'skywind3000/asynctasks.vim'


# - Coding ---------------------------------------

[[plugins]]
repo = 'neoclide/coc.nvim'
depends = ['vim-snippets']
rev = 'release'
build = 'yarn install --frozen-lockfile'
hook_add = '''
  let g:coc_snippet_next = '<c-j>'
  let g:coc_snippet_prev = '<c-k>'
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'jsfaint/gen_tags.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowHidden = 1
  let g:NERDTreeMinimalUI = 1
  let g:NERDTreeStatusLine = ''
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
  let g:NERDSpaceDelim = 0
  let g:NERDTrimTrailingWhitespace = 1
'''

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_javascript_checkers = ['eslint']
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
  let g:airline#extensions#ale#enabled = 1
  let g:ale_set_balloons = 1
  let g:ale_fixers = {
  \   '*': ['remove_trailing_whitespace', 'trim_whitespace']
  \}

'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
  let g:EditorConfig_exclude_patterns = ['fugitive://.*']
  let g:EditorConfig_core_mode = 'external_command'
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-classpath'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'amix/open_file_under_cursor.vim'

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'vim-test/vim-test'

[[plugins]]
repo = 'tpope/vim-projectionist'

[[plugins]]
repo = 'rrethy/vim-hexokinase'
build = 'make hexokinase'
hook_add = '''
  let g:all_hexokinase_patterns = ['full_hex', 'triple_hex', 'rgb', 'rgba', 'hsl', 'hsla']
  let g:Hexokinase_ftOptInPatterns = {
  \ 'css': g:all_hexokinase_patterns,
  \ 'less': g:all_hexokinase_patterns,
  \ 'scss': g:all_hexokinase_patterns,
  \ 'sass': g:all_hexokinase_patterns,
  \ 'clojure': 'full_hex,triple_hex,hsl,hsla'
  \ }
  let g:Hexokinase_ftEnabled  = ['css', 'less', 'sass', 'scss', 'clojure']
  let g:Hexokinase_ftDisabled = ['help']
'''

[[plugins]]
repo = 'mattn/emmet-vim'


# - Text Manipulation ----------------------------

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 't9md/vim-textmanip'

[[plugins]]
repo = 'tpope/vim-speeddating'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/visincr'

[[plugins]]
repo = 'losingkeys/vim-niji'
hook_add = '''
  let g:niji_matching_filetypes = ['lisp', 'scheme', 'clojure', 'fennel']
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
on_cmd = 'Switch'
hook_add = '''
  let g:switch_mapping = '<Space>tt'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'

[[plugins]]
repo = 'wellle/targets.vim'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'dkarter/bullets.vim'


# - Language -------------------------------------

[[plugins]]
## Ultimate syntax collection
repo = 'sheerun/vim-polyglot'
hook_add = '''
  let g:javascript_plugin_jsdoc = 1
  let g:jscomplete_use = ['dom', 'moz', 'es6th']

  let g:clojure_align_multiline_strings = 0
'''

[[plugins]]
repo = 'tpope/vim-fireplace'
on_ft = 'clojure'

[[plugins]]
repo = 'dgrnbrg/vim-redl'
on_ft = 'clojure'

[[plugins]]
repo = 'clojure-vim/acid.nvim'
on_ft = 'clojure'
hook_post_update = ':UpdateRemotePlugins'

[[plugins]]
repo = 'Olical/conjure'
rev = 'v4.7.0'
on_ft = ['clojure', 'scheme', 'racket', 'chicken', 'fennel']
hook_add = '''
  let g:conjure#client#fennel#aniseed#aniseed_module_prefix = "aniseed."
'''

[[plugins]]
repo = 'Olical/aniseed'
rev = 'v3.9.0'

[[plugins]]
repo = 'Olical/nvim-local-fennel'
rev = 'v2.3.0'

[[plugins]]
repo = 'bakpakin/fennel.vim'

[[plugins]]
repo = 'kovisoft/paredit'
on_ft = ['clojure', 'scheme', 'racket', 'chicken', 'fennel']
hook_add = '''
  let g:paredit_mode = 1
  let g:paredit_shortmaps = 1
  let g:paredit_smartjump = 1
  let g:paredit_leader = ','
'''

[[plugins]]
repo = 'guileen/vim-node'
on_ft = 'javascript'

[[plugins]]
repo = 'myhere/vim-nodejs-complete'
on_ft = 'javascript'

[[plugins]]
repo = 'prettier/vim-prettier'
on_ft = ['javascript', 'typescript', 'less', 'css', 'scss', 'json', 'graphql', 'markdown', 'yaml', 'html']
hook_post_source = '''
  unmap <leader>p
'''

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = 'ruby'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app && yarn install'

[[plugins]]
# An interactive scratchpad
repo = 'metakirby5/codi.vim'


# - Applications ---------------------------------

[[plugins]]
repo = 'gregsexton/VimCalc'

[[plugins]]
repo = 'simnalamburt/vim-mundo'

[[plugins]]
repo = 'LucHermitte/lh-vim-lib'

[[plugins]]
repo = 'LucHermitte/local_vimrc'
depends = 'lh-vim-lib'
hook_add = '''
  call lh#local_vimrc#filter_list('asklist', 'v:val != $HOME')
  call lh#local_vimrc#munge('sandboxlist', $HOME)
'''

[[plugins]]
# A few functional programming utilities for VimL
repo = 'dan-t/vim-fn'

[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'acustodioo/vim-tmux'

[[plugins]]
repo = 'voldikss/vim-floaterm'
hook_add = '''
  let g:floaterm_rootmarkers = ['.git', '.gitignore']
'''

# - Version Control ------------------------------

[[plugins]]
# Show a sign in the gutter to signify changes
repo = 'mhinz/vim-signify'
hook_add = '''
  let g:signify_realtime = 1
  let g:signify_vcs_list = ['git', 'hg']
'''

[[plugins]]
# Perform various git commands
repo = 'lambdalisue/gina.vim'
on_cmd = 'Gina'

[[plugins]]
# Open commit messages in a popup window
repo = 'rhysd/git-messenger.vim'
on_cmd = 'GitMessenger'
on_map = '<Plug>(git-messenger-'
lazy = 1

[[plugins]]
repo = 'samoshkin/vim-mergetool'
hook_add = '''
  let g:mergetool_layout = 'LmR'
  let g:mergetool_prefer_revision = 'local'
'''

[[plugins]]
repo = 'APZelos/blamer.nvim'
hook_add = '''
  let g:blamer_show_in_insert_modes = 0
  let g:blamer_show_in_visual_modes = 0
  let g:blamer_relative_time = 1
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'tyru/open-browser-github.vim'
depends = 'open-browser.vim'
hook_add = '''
  let g:openbrowser_github_always_used_branch=1
'''


# - Search ---------------------------------------

[[plugins]]
repo = 'jremmen/vim-ripgrep'

[[plugins]]
repo = 'bronson/vim-visual-star-search'
hook_post_source = '''
  unmap <leader>*
'''

[[plugins]]
repo = 'Lokaltog/vim-easymotion'

[[plugins]]
repo = 'brooth/far.vim'


# - UI -------------------------------------------

[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
  let g:startify_session_dir = '~/.config/nvim/sessions'
  let g:startify_lists = [
    \ { 'type': 'files',     'header': ['   Files']                         },
    \ { 'type': 'dir',       'header': ['   Current Directory ' . getcwd()] },
    \ { 'type': 'sessions',  'header': ['   Sessions']                      },
    \ { 'type': 'bookmarks', 'header': ['   Bookmarks']                     },
    \ ]
  let g:startify_bookmarks = [
    \ { 'I': '~/dotfiles/vim/.vim/init.vim' },
    \ { 'K': '~/dotfiles/vim/.vim/autoload/makyo/keymap.json5' },
    \ { 'P': '~/dotfiles/vim/.vim/rc/dein.toml' },
    \ { 'Z': '~/dotfiles/zsh/.zshrc' },
    \ '~/Code',
    \ ]
  let g:startify_session_persistence = 1
  let g:startify_change_to_vcs_root = 0
  let g:startify_session_sort = 1
  let g:startify_enable_special = 0
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
augroup = 'makyoConfig#Plugin#denite'

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_post_update = 'call fzf#install()'
augroup = 'makyoConfig#Plugin#fzf'

[[plugins]]
repo = 'jlanzarotta/bufexplorer'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_fileTypeExclude = ['text', 'help']
  let g:indentLine_bufNameExclude = ['_.*', 'Startify*']
  let g:indentLine_char = 'â”Š'
'''

[[plugins]]
repo = 'tomtom/quickfixsigns_vim'
hook_add = '''
  let g:quickfixsigns_classes = ['marks']
'''

[[plugins]]
repo = 'psliwka/vim-smoothie'

[[plugins]]
repo = 't9md/vim-choosewin'
hook_add = '''
  let g:choosewin_overlay_enable = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline/vim-airline-themes']
hook_add = '''
  let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

  let g:airline_powerline_fonts = 1
  let g:airline_highlighting_cache = 1
  let g:airline_exclude_preview = 1
  let g:airline_skip_empty_sections = 1

  let g:airline_mode_map = {
  \ '__'     : '-',
  \ 'c'      : 'C',
  \ 'i'      : 'I',
  \ 'ic'     : 'I',
  \ 'ix'     : 'I',
  \ 'n'      : 'N',
  \ 'multi'  : 'M',
  \ 'ni'     : 'N',
  \ 'no'     : 'N',
  \ 'R'      : 'R',
  \ 'Rv'     : 'R',
  \ 's'      : 'S',
  \ 'S'      : 'S',
  \ ''     : 'S',
  \ 't'      : 'T',
  \ 'v'      : 'V',
  \ 'V'      : 'V',
  \ ''     : 'V',
  \ }
'''
hook_post_source = '''
  set background=dark
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
  let g:airline_theme = 'minimalist'
  let g:airline_minimalist_showmod = 1
'''

[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_cmd = ['WhichKey', 'WhichKey!', 'WhichKeyVisual', 'WhichKeyVisual!']
hook_source = '''
  let g:which_key_align_by_separator = 1
  let g:which_key_use_floating_win = 1
  doautocmd User vim-which-key
  doautocmd User makyo_ui_fix
'''


# - Themes ---------------------------------------

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'vim-scripts/fruity.vim'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'atelierbram/Base2Tone-vim'

[[plugins]]
repo = 'ntk148v/vim-horizon'

[[plugins]]
repo = 'yuttie/hydrangea-vim'

[[plugins]]
repo = 'cseelus/vim-colors-lucid'

[[plugins]]
repo = 'cseelus/vim-colors-tone'

[[plugins]]
repo = 'flrnprz/candid.vim'

[[plugins]]
repo = 'colepeters/spacemacs-theme.vim'

[[plugins]]
repo = 'phanviet/vim-monokai-pro'

[[plugins]]
repo = 'cideM/yui'

[[plugins]]
repo = 'bruth/vim-newsprint-theme'

[[plugins]]
repo = 'rakr/vim-two-firewatch'
hook_source = '''
  let g:two_firewatch_italics=1
'''

[[plugins]]
repo = 'arzg/vim-colors-xcode'

[[plugins]]
repo = 'vim-scripts/AfterColors.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_source = '''
  let g:airline_powerline_fonts=1
'''

[[plugins]]
# Toolkit for developing new color schemes
repo = 'lifepillar/vim-colortemplate'


# - Filetype Settings ----------------------------

[ftplugin]
_ = '''
 set sw=2 sts=2 ts=2 et smarttab smartindent
'''

text = '''
  setlocal textwidth=78
'''

markdown_mkd = '''
  setlocal tw=80
'''

vim = '''
  setlocal foldmethod=marker
'''

javascript_ruby_erb = '''
  set foldmethod=syntax
'''

javascript_json_json5 = '''
  let b:ale_fixers = ['prettier', 'eslint']
  let b:ale_fix_on_save = 1
'''

sass_scss_less_css = '''
  set foldmethod=indent
'''

sass_scss_less_css = '''
  set foldmethod=indent
'''
